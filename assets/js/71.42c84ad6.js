(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{341:function(t,s,a){"use strict";a.r(s);var n=a(13),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"算术运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算术运算符"}},[t._v("#")]),t._v(" 算术运算符")]),t._v(" "),s("p",[t._v("包括以下几种算术运算符。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("算术运算符")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("+")]),t._v(" "),s("td",[t._v("求和（字符串拼接）")])]),t._v(" "),s("tr",[s("td",[t._v("-")]),t._v(" "),s("td",[t._v("求差")])]),t._v(" "),s("tr",[s("td",[t._v("*")]),t._v(" "),s("td",[t._v("求积")])]),t._v(" "),s("tr",[s("td",[t._v("/")]),t._v(" "),s("td",[t._v("求商")])]),t._v(" "),s("tr",[s("td",[t._v("%")]),t._v(" "),s("td",[t._v("取模（取余数），开发中经常作为某个数字是否被整除")])])])]),t._v(" "),s("p",[s("code",[t._v("+")]),t._v(" 号不光有运算的功能，还有拼接字符串的功能。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n\t总结加号的用法\n\t\t数学运算：在数学上是加法运算，number\n\t\t字符串拼接：在加号两边，其中一边是字符串，那就会产生字符串拼接操作，数值类型转换为字符串类型\n\t\t转换类型：类数字的前面加+号，可以转化类型\n*/")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数学运算")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("num2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" num2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 30")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 字符串拼接")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1010")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类型转换")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123")]),t._v("\n")])])]),s("p",[t._v("注意："),s("strong",[s("font",{attrs:{color:"red"}},[s("code",[t._v("-")]),t._v(" "),s("code",[t._v("*")]),t._v(" "),s("code",[t._v("/")]),t._v(" "),s("code",[t._v("%")]),t._v(" 都存在隐式转换")])],1),t._v("。")]),t._v(" "),s("br"),t._v(" "),s("h2",{attrs:{id:"赋值运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算符"}},[t._v("#")]),t._v(" 赋值运算符")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("运算符")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("=")]),t._v(" "),s("td",[t._v("赋值")])]),t._v(" "),s("tr",[s("td",[t._v("+=")]),t._v(" "),s("td",[t._v("加赋值 ( x += y ) == (x = x + y)")])]),t._v(" "),s("tr",[s("td",[t._v("-=")]),t._v(" "),s("td",[t._v("减赋值 ( x -= y ) == (x = x - y)")])]),t._v(" "),s("tr",[s("td",[t._v("*=")]),t._v(" "),s("td",[t._v("乘赋值 ( x *= y ) == (x = x * y)")])]),t._v(" "),s("tr",[s("td",[t._v("/=")]),t._v(" "),s("td",[t._v("除赋值 ( x /= y ) == (x = x / y)")])]),t._v(" "),s("tr",[s("td",[t._v("%=")]),t._v(" "),s("td",[t._v("取余赋值 ( x %= y ) == (x = x % y)")])])])]),t._v(" "),s("p",[t._v("将等号右边的值赋予给左边，要求左边必须是一个容器")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xiaosutongxue'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("br"),t._v(" "),s("h2",{attrs:{id:"一元运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一元运算符"}},[t._v("#")]),t._v(" 一元运算符")]),t._v(" "),s("h3",{attrs:{id:"前置操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前置操作"}},[t._v("#")]),t._v(" 前置操作")]),t._v(" "),s("p",[t._v("前置操作会在表达式最先执行。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里++n会在最先执行")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 19 ")]),t._v("\n")])])]),s("p",[t._v("++n 就是 n=n+1的简写形式。")]),t._v(" "),s("h3",{attrs:{id:"后置操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后置操作"}},[t._v("#")]),t._v(" 后置操作")]),t._v(" "),s("p",[t._v("后置操作会在表达式最后执行。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里n++会在最后执行")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 18")]),t._v("\n")])])]),s("p",[t._v("注意："),s("strong",[s("font",{attrs:{color:"red"}},[t._v("前置自增和后置自增单独使用没有区别，如果参与运算就有区别了。")])],1)]),t._v(" "),s("ul",[s("li",[t._v("如果++在前，会执行先自增，然后使用自增后的的值进行运算。")]),t._v(" "),s("li",[t._v("如果++在后，会使用原来的值先参与运行，然后自身在进行自增。")])]),t._v(" "),s("br"),t._v(" "),s("h2",{attrs:{id:"比较运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#比较运算符"}},[t._v("#")]),t._v(" 比较运算符")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("运算符")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("==")]),t._v(" "),s("td",[t._v("相等（只要值一样就是true，不管数据类型，开发中不常使用）")])]),t._v(" "),s("tr",[s("td",[t._v("===")]),t._v(" "),s("td",[t._v("全等（开发常用，要求值和数据类型都一样）")])]),t._v(" "),s("tr",[s("td",[t._v("!=")]),t._v(" "),s("td",[t._v("不等")])]),t._v(" "),s("tr",[s("td",[t._v("!==")]),t._v(" "),s("td",[t._v("不全等（只有在类型相同的前提下，再去比较值）")])]),t._v(" "),s("tr",[s("td",[t._v(">")]),t._v(" "),s("td",[t._v("大于")])]),t._v(" "),s("tr",[s("td",[t._v(">=")]),t._v(" "),s("td",[t._v("大于等于")])]),t._v(" "),s("tr",[s("td",[t._v("<")]),t._v(" "),s("td",[t._v("小于")])]),t._v(" "),s("tr",[s("td",[t._v("<=")]),t._v(" "),s("td",[t._v("小于等于")])])])]),t._v(" "),s("p",[t._v("下面来体验不同类型的比较结果：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n")])])]),s("p",[s("strong",[t._v("注意：")])]),t._v(" "),s("ul",[s("li",[t._v("比较结果为boolean类型，即只会得到 "),s("code",[t._v("true")]),t._v(" 或 "),s("code",[t._v("false")])]),t._v(" "),s("li",[t._v("字符串比较，是比较的字符对应的ASCII码（从左往右依次比较，如果第一位一样再比较第二位，以此类推）")]),t._v(" "),s("li",[s("strong",[t._v("NaN不等于任何值，包括它本身，因此NaN不能参与运算")])]),t._v(" "),s("li",[t._v("尽量不要比较小数，因为小数有精度问题")]),t._v(" "),s("li",[t._v("不同类型之间比较会发生隐式转换，例如 3>'2' //true\n"),s("ul",[s("li",[t._v("最终把数据隐式转换成number类型再比较")]),t._v(" "),s("li",[t._v("开发中，如果进行准确的比较使用===")])])])]),t._v(" "),s("p",[s("strong",[t._v("= 和 == 和 === 怎么区别？")])]),t._v(" "),s("ul",[s("li",[t._v("= 是赋值。")]),t._v(" "),s("li",[t._v("== 是判断，只要求值相等，不要求数据类型一样即可返回true。")]),t._v(" "),s("li",[t._v("=== 是全等，要求值和数据类型都一样返回的才是true。")])]),t._v(" "),s("p",[t._v("开发中，请使用 ===")]),t._v(" "),s("p",[s("strong",[t._v("比较运算符返回的结果是什么？")])]),t._v(" "),s("ul",[s("li",[t._v("结果只有2个， true 或者 false")])]),t._v(" "),s("h3",{attrs:{id:"tonumber"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tonumber"}},[t._v("#")]),t._v(" toNumber()")]),t._v(" "),s("h3",{attrs:{id:"toprimitive"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#toprimitive"}},[t._v("#")]),t._v(" toPrimitive()")]),t._v(" "),s("br"),t._v(" "),s("h2",{attrs:{id:"逻辑运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[t._v("#")]),t._v(" 逻辑运算符")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("符号")]),t._v(" "),s("th",[t._v("名称")]),t._v(" "),s("th",[t._v("读法")]),t._v(" "),s("th",[t._v("口诀")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("&&")]),t._v(" "),s("td",[t._v("逻辑与（和）")]),t._v(" "),s("td",[t._v("并且and")]),t._v(" "),s("td",[t._v("一假则假")])]),t._v(" "),s("tr",[s("td",[t._v("||")]),t._v(" "),s("td",[t._v("逻辑或")]),t._v(" "),s("td",[t._v("或者or")]),t._v(" "),s("td",[t._v("一真则真")])]),t._v(" "),s("tr",[s("td",[t._v("!")]),t._v(" "),s("td",[t._v("逻辑非")]),t._v(" "),s("td",[t._v("取反not")]),t._v(" "),s("td",[t._v("真变假，假变真")])])])]),t._v(" "),s("h3",{attrs:{id:"逻辑与"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逻辑与"}},[t._v("#")]),t._v(" 逻辑与")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("&&")]),t._v(" 表示逻辑与，指符号两端都为 true 时表达式结果为 true。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'表达式成立'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"逻辑或"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逻辑或"}},[t._v("#")]),t._v(" 逻辑或")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("||")]),t._v(" 表示逻辑或，指符号两端有一方为 true，表达式即成立。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'表达式成立'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"逻辑非"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逻辑非"}},[t._v("#")]),t._v(" 逻辑非")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("!")]),t._v(" 表示逻辑非，即原来是 true 转变为 false，反之亦然。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'表达式成立'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"短路运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#短路运算"}},[t._v("#")]),t._v(" 短路运算")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("符号")]),t._v(" "),s("th",[t._v("短路条件")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("&&")]),t._v(" "),s("td",[t._v("左边为假就短路")])]),t._v(" "),s("tr",[s("td",[t._v("||")]),t._v(" "),s("td",[t._v("左边为真就短路")])])])]),t._v(" "),s("ul",[s("li",[t._v("原因：通过左边能得到整个式子的结果，因此没必要再判断右边")]),t._v(" "),s("li",[t._v("运算结果：无论&&还是||，运算结果都是最后被执行的表达式值，一般用在变量赋值")])]),t._v(" "),s("br"),t._v(" "),s("h2",{attrs:{id:"位运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#位运算符"}},[t._v("#")]),t._v(" 位运算符")]),t._v(" "),s("p",[t._v("JavaScript也支持位运算符")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("位运算符")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("&")]),t._v(" "),s("td",[t._v("与")])]),t._v(" "),s("tr",[s("td",[t._v("|")]),t._v(" "),s("td",[t._v("或")])]),t._v(" "),s("tr",[s("td",[t._v("~")]),t._v(" "),s("td",[t._v("非")])]),t._v(" "),s("tr",[s("td",[t._v("^")]),t._v(" "),s("td",[t._v("异或")])]),t._v(" "),s("tr",[s("td",[t._v("<<")]),t._v(" "),s("td",[t._v("左移")])]),t._v(" "),s("tr",[s("td",[t._v(">>")]),t._v(" "),s("td",[t._v("右移")])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -6")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n")])])]),s("h2",{attrs:{id:"delete"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#delete"}},[t._v("#")]),t._v(" delete")]),t._v(" "),s("p",[t._v("JavaScript中支持delete运算符，可以删除对象里的属性")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xiaosutongxue"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("age")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { name: 'xiaosutongxue' }")]),t._v("\n")])])]),s("h2",{attrs:{id:"优先级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优先级"}},[t._v("#")]),t._v(" 优先级")]),t._v(" "),s("p",[t._v("同时使用多个运算符编写程序时，会按着某种顺序先后执行，我们称为"),s("strong",[t._v("优先级")]),t._v("。")]),t._v(" "),s("p",[t._v("JavaScript中优先级越高越先被执行，优先级相同时从左向右执行。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("优先级")]),t._v(" "),s("th",[t._v("运算符")]),t._v(" "),s("th",[t._v("顺序")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("1")]),t._v(" "),s("td",[t._v("小括号")]),t._v(" "),s("td",[t._v("( )")])]),t._v(" "),s("tr",[s("td",[t._v("2")]),t._v(" "),s("td",[t._v("一元运算符")]),t._v(" "),s("td",[t._v("++  --  !")])]),t._v(" "),s("tr",[s("td",[t._v("3")]),t._v(" "),s("td",[t._v("算术运算符")]),t._v(" "),s("td",[t._v("先 *  /  % 后 +  -")])]),t._v(" "),s("tr",[s("td",[t._v("4")]),t._v(" "),s("td",[t._v("关系运算符")]),t._v(" "),s("td",[t._v(">  >=  <  <=")])]),t._v(" "),s("tr",[s("td",[t._v("5")]),t._v(" "),s("td",[t._v("相等运算符")]),t._v(" "),s("td",[t._v("==  !=  ===  !==")])]),t._v(" "),s("tr",[s("td",[t._v("6")]),t._v(" "),s("td",[t._v("逻辑运算符")]),t._v(" "),s("td",[t._v("先 && 后 ||")])]),t._v(" "),s("tr",[s("td",[t._v("7")]),t._v(" "),s("td",[t._v("赋值运算符")]),t._v(" "),s("td",[t._v("=")])]),t._v(" "),s("tr",[s("td",[t._v("8")]),t._v(" "),s("td",[t._v("逗号运算符")]),t._v(" "),s("td",[t._v(",")])])])]),t._v(" "),s("ul",[s("li",[t._v("JavaScript中优先级越高越先被执行，优先级相同时以书写顺序从左向右执行\n"),s("ul",[s("li",[t._v("一元运算符里面的逻辑非优先级很高")]),t._v(" "),s("li",[t._v("逻辑与比逻辑或优先级高")]),t._v(" "),s("li",[t._v("乘、除、取余优先级相同，加、减优先级相同，且乘、除、取余优先级大于加、减")]),t._v(" "),s("li",[t._v("使用（）可以提升优先级")])])])])])}),[],!1,null,null,null);s.default=r.exports}}]);