(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{342:function(t,s,a){"use strict";a.r(s);var n=a(13),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h4",{attrs:{id:"计算机程序可以处理大量的数据-为什么要给数据分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#计算机程序可以处理大量的数据-为什么要给数据分类"}},[t._v("#")]),t._v(" 计算机程序可以处理大量的数据，为什么要给数据分类？")]),t._v(" "),s("ul",[s("li",[t._v("更加充分和高效的利用内存")]),t._v(" "),s("li",[t._v("也更加方便程序员的使用数据")])]),t._v(" "),s("h4",{attrs:{id:"js的数据类型整体分为两大类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js的数据类型整体分为两大类"}},[t._v("#")]),t._v(" JS的数据类型整体分为两大类：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("简单数据类型（值类型）")]),t._v(" "),s("ul",[s("li",[t._v("Number")]),t._v(" "),s("li",[t._v("Boolean")]),t._v(" "),s("li",[t._v("String")]),t._v(" "),s("li",[t._v("null")]),t._v(" "),s("li",[t._v("undefined")])])]),t._v(" "),s("li",[s("p",[t._v("复杂数据类型（引用类型）")]),t._v(" "),s("ul",[s("li",[t._v("Object")])])])]),t._v(" "),s("h2",{attrs:{id:"简单数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单数据类型"}},[t._v("#")]),t._v(" 简单数据类型")]),t._v(" "),s("h3",{attrs:{id:"number-数字型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#number-数字型"}},[t._v("#")]),t._v(" Number（数字型）")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("JavaScript中的正数、负数、小数等统一称为数字类型。")])]),t._v(" "),s("li",[s("p",[t._v("在控制台输出 "),s("strong",[s("font",{attrs:{color:"blue"}},[t._v("蓝色")])],1),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("小数与小数相加存在精度问题，例如："),s("strong",[s("font",{attrs:{color:"red"}},[t._v("0.1 + 0.2 ≠ 0.3")])],1)])])]),t._v(" "),s("p",[s("code",[t._v("最大值")]),t._v("：Number.MAX_VALUE，这个值为： 1.7976931348623157e+308")]),t._v(" "),s("p",[s("code",[t._v("最小值")]),t._v("：Number.MIN_VALUE，这个值为：5e-32")]),t._v(" "),s("p",[s("code",[t._v("Infinity")]),t._v(" ：代表无穷大，大于任何数值")]),t._v(" "),s("p",[s("code",[t._v("-Infinity")]),t._v(" ：代表无穷小，小于任何数值")]),t._v(" "),s("p",[s("code",[t._v("NaN")]),t._v(" ：Not a number，代表一个非数值")]),t._v(" "),s("br"),t._v(" "),s("h3",{attrs:{id:"boolean-布尔型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#boolean-布尔型"}},[t._v("#")]),t._v(" Boolean（布尔型）")]),t._v(" "),s("ol",[s("li",[t._v("表示肯定或否定时在计算机中对应的是布尔类型数据。")]),t._v(" "),s("li",[t._v("它有两个固定的值 "),s("code",[t._v("true")]),t._v(" 和 "),s("code",[t._v("false")]),t._v("，表示肯定的数据用 true（真），表示否定的数据用 false（假）。")]),t._v(" "),s("li",[t._v("在控制台输出 "),s("strong",[s("font",{attrs:{color:"blue"}},[t._v("蓝色")])],1),t._v("。")]),t._v(" "),s("li",[t._v("布尔值很少是直接赋值得到的，都是从结果中得到，主要利用布尔值进行判断。")])]),t._v(" "),s("br"),t._v(" "),s("h3",{attrs:{id:"string-字符串型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string-字符串型"}},[t._v("#")]),t._v(" String（字符串型）")]),t._v(" "),s("ol",[s("li",[t._v("字符串是个伪数组。")]),t._v(" "),s("li",[t._v("通过 "),s("code",[t._v("单引号（''）")]),t._v("、"),s("code",[t._v('双引号（""）')]),t._v(" 或 "),s("code",[t._v("反引号（``）")]),t._v("包裹的数据都叫字符串，单引号和双引号没有本质上的区别。")]),t._v(" "),s("li",[t._v("在控制台输出 "),s("strong",[s("font",{attrs:{color:"black"}},[t._v("黑色")])],1)]),t._v(" "),s("li",[t._v("单引号或双引号一定要成对使用，支持互相嵌套，使用规则："),s("strong",[t._v("外双内单")]),t._v("或"),s("strong",[t._v("外单内双")]),t._v("。")]),t._v(" "),s("li",[t._v("必要时可以使用转义符 "),s("code",[t._v("\\")]),t._v("，输出单引号或双引号。")])]),t._v(" "),s("h5",{attrs:{id:"模版字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模版字符串"}},[t._v("#")]),t._v(" 模版字符串")]),t._v(" "),s("p",[t._v("符号："),s("code",[t._v("``")])]),t._v(" "),s("p",[t._v("优点：支持换行，使开发更高效。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//内容拼接变量时，用 ${} 包住变量")]),t._v("\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("姓名：")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("，年龄")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h5",{attrs:{id:"转义字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#转义字符"}},[t._v("#")]),t._v(" 转义字符")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("转义符")]),t._v(" "),s("th",[t._v("解释说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("\\n")]),t._v(" "),s("td",[t._v("换行符，n是newline的意思")])]),t._v(" "),s("tr",[s("td",[t._v("\\ \\")]),t._v(" "),s("td",[t._v("斜杠 \\")])]),t._v(" "),s("tr",[s("td",[t._v("\\'")]),t._v(" "),s("td",[t._v("'单引号")])]),t._v(" "),s("tr",[s("td",[t._v('\\"')]),t._v(" "),s("td",[t._v('"双引号')])]),t._v(" "),s("tr",[s("td",[t._v("\\t")]),t._v(" "),s("td",[t._v("tab缩进")])]),t._v(" "),s("tr",[s("td",[t._v("\\b")]),t._v(" "),s("td",[t._v("空格，b是blank的意思")])])])]),t._v(" "),s("br"),t._v(" "),s("h3",{attrs:{id:"null-空值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#null-空值"}},[t._v("#")]),t._v(" null（空值）")]),t._v(" "),s("ol",[s("li",[t._v("null用于定义一个空对象，即如果变量要用来保存引用类型，可以在初始化时将其设置为null。")]),t._v(" "),s("li",[t._v("在控制台输出 "),s("strong",[s("font",{attrs:{color:"gray"}},[t._v("灰色")])],1),t._v("。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//null表示值为空")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n\t通常都是在结果中得到的\n\t如果点取消，就得到null\n\t如果什么都没输入，点确认，变量里相当于存了空字符串\n*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("prompt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'请输入年龄：'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h5",{attrs:{id:"null-和-undefined-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#null-和-undefined-区别"}},[t._v("#")]),t._v(" null 和 undefined 区别：")]),t._v(" "),s("ul",[s("li",[t._v("undefined 表示没有赋值")]),t._v(" "),s("li",[t._v("null 表示赋值了，但是内容为空")])]),t._v(" "),s("h5",{attrs:{id:"null开发中的使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#null开发中的使用场景"}},[t._v("#")]),t._v(" null开发中的使用场景：")]),t._v(" "),s("ul",[s("li",[t._v("官方解释：把null作为尚未创建的对象")]),t._v(" "),s("li",[t._v("大白话：看将来有个变量里面存放一个对象，如果还没准备好对象，可以放个null")])]),t._v(" "),s("br"),t._v(" "),s("h3",{attrs:{id:"undefined-未定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#undefined-未定义"}},[t._v("#")]),t._v(" undefined（未定义）")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("未定义是比较特殊的类型，只有一个值undefined。")])]),t._v(" "),s("li",[s("p",[t._v("只声明变量，不赋值的情况下，变量的默认值就是undefined。（一般很少直接为某个变量赋值为undefined）")])]),t._v(" "),s("li",[s("p",[t._v("在控制台输出 "),s("strong",[s("font",{attrs:{color:"gray"}},[t._v("灰色")])],1),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("未赋值与未定义的变量值都为 "),s("code",[t._v("undefined")]),t._v(" ，建议声明变量设置初始值，以便区分变量状态。")])])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" age   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//声明变量但未赋值")]),t._v("\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出undefined")]),t._v("\n")])])]),s("h5",{attrs:{id:"undefined开发中的使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#undefined开发中的使用场景"}},[t._v("#")]),t._v(" undefined开发中的使用场景：")]),t._v(" "),s("ul",[s("li",[t._v("定义变量未给值就是 undefined")]),t._v(" "),s("li",[t._v("开发中经常声明一个变量，等待传送过来的数据，如果检测变量是undefined就说明没有值传递过来")])]),t._v(" "),s("br"),t._v(" "),s("h2",{attrs:{id:"复杂数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复杂数据类型"}},[t._v("#")]),t._v(" 复杂数据类型")]),t._v(" "),s("h3",{attrs:{id:"object-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object-对象"}},[t._v("#")]),t._v(" Object（对象）")]),t._v(" "),s("h4",{attrs:{id:"什么是对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是对象"}},[t._v("#")]),t._v(" 什么是对象")]),t._v(" "),s("p",[t._v("对象（object）：JavaScript里的一种数据类型，可以理解为是一种无序的数据（键值对）集合。")]),t._v(" "),s("p",[t._v("特点：可以详细的描述某个事物，是一个能够具体做事情的事物")]),t._v(" "),s("p",[t._v("作用：描述复杂的数据、封装代码")]),t._v(" "),s("h4",{attrs:{id:"对象使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象使用"}},[t._v("#")]),t._v(" 对象使用")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//声明语法：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//构造函数写法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" 对象名 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//字面量写法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" 对象名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t属性名：属性值，\n\t方法名：函数（匿名函数）\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[t._v("对象由属性和方法组成")]),t._v(" "),s("ul",[s("li",[t._v("属性：信息或叫特征（名词）。\n"),s("ul",[s("li",[t._v("比如：手机尺寸、颜色等")])])]),t._v(" "),s("li",[t._v("方法：功能或叫行为（动词）。\n"),s("ul",[s("li",[t._v("比如：手机打电话、发短信等")])])]),t._v(" "),s("li",[t._v("注意：\n"),s("ul",[s("li",[t._v("属性\n"),s("ul",[s("li",[t._v("属性都是成对出现的，包括属性名和值，它们之间使用英文：分隔")]),t._v(" "),s("li",[t._v("多个属性之间使用英文，分隔")]),t._v(" "),s("li",[t._v("属性就是依附在对象上的变量（外面是变量，对象内是属性）")]),t._v(" "),s("li",[t._v("属性名可以使用\"\"或''，一般情况下省略，除非名称遇到特殊符号如空格、中横线等。")])])]),t._v(" "),s("li",[t._v("方法\n"),s("ul",[s("li",[t._v("方法是由方法名和函数两部分构成，它们之间使用：分隔")]),t._v(" "),s("li",[t._v("多个属性之间使用英文，分隔")]),t._v(" "),s("li",[t._v("方法是依附在对象中的函数")]),t._v(" "),s("li",[t._v("方法名可以使用\"\"或''，一般情况下省略，除非名称遇到特殊符号如空格、中横线等。")])])])])])])]),t._v(" "),s("li",[s("p",[t._v("属性")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("添加属性")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//第一种")]),t._v("\n对象名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("属性名 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 值\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//第二种")]),t._v("\n对象名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("属性名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 值\n")])])])]),t._v(" "),s("li",[s("p",[t._v("属性访问")]),t._v(" "),s("p",[t._v("声明对象，并添加了若干属性后，可以使用.或[]获得对象中属性对应的值，我们称之为属性访问。简单理解就是获得对象里面的属性值。")])])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("对象"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("属性名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("对象"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'属性名'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("方法")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("添加方法")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//第一种")]),t._v("\n对象名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("方法名")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//第二种")]),t._v("\n对象名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("方法名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("方法访问")]),t._v(" "),s("p",[t._v("声明对象，并添加了若干方法后，可以使用.调用对象中函数，我们称之为方法调用。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("对象"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("方法名")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])])])]),t._v(" "),s("h4",{attrs:{id:"操作对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#操作对象"}},[t._v("#")]),t._v(" 操作对象")]),t._v(" "),s("p",[t._v("对象本质是无序的数据集合，操作数据无非就是增、删、改、查。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("查询对象：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("对象"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("属性 或者 对象"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'属性'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n对象"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("方法")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("重新赋值：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("对象"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("属性 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 值\n\n对象"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("方法")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("对象添加新的数据：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("对象"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("新属性名 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 新值\n")])])])]),t._v(" "),s("li",[s("p",[t._v("删除对象中属性：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" 对象"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("属性名\n")])])])])]),t._v(" "),s("p",[t._v("新增一个属性时，首先会去对象里面找是否有这个属性，如果有则更改其值，如果没有则新增这个属性。")]),t._v(" "),s("h4",{attrs:{id:"遍历对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#遍历对象"}},[t._v("#")]),t._v(" 遍历对象")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("对象没有像数组一样的length属性，所以无法确定长度。")])]),t._v(" "),s("li",[s("p",[t._v("对象里面是无序的键值对，没有规律。不像数组里面有规律的下标")])]),t._v(" "),s("li",[s("p",[t._v("for in 循环，专门遍历对象的")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//语法：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" 变量名 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" 对象"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("对象"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("变量名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//举例：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("uname")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小苏'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("age")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" k "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//得到带字符串的属性名")]),t._v("\n\tconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//得到属性值")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n注意：\n\t获取属性值是不用 对象名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("k，会报"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("，应使用 对象名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t变量名一般用k表示，代表对象中的属性名，即k "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'uname'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'age'")]),t._v("，所以当用obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("获取属性值时，k不能加"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("将其他类型转为字符串类型")]),t._v(" "),s("ul",[s("li",[t._v("null 和 undefined 不能够使用 .toString()")]),t._v(" "),s("li",[t._v("只有对象类型才能 .toString()")]),t._v(" "),s("li",[t._v("为什么数字类型和布尔类型可以使用\n"),s("ul",[s("li",[t._v("因为数字和布尔类型也是对象的一种")])])])])])]),t._v(" "),s("h4",{attrs:{id:"内置对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内置对象"}},[t._v("#")]),t._v(" 内置对象")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("内置对象是什么？")]),t._v(" "),s("p",[t._v("JavaScript内部提供的对象，包含各种属性和方法给开发者调用")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("内置对象Math")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Math对象时JavaScript提供的一个“数学高手”对象")])]),t._v(" "),s("li",[s("p",[t._v("提供一系列做数学运算的方法")])]),t._v(" "),s("li",[s("p",[t._v("方法有：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("含义")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("random()")]),t._v(" "),s("td",[t._v("生成0-1之间的随机数（包含0不包含1）")])]),t._v(" "),s("tr",[s("td",[t._v("ceil()")]),t._v(" "),s("td",[t._v("向上取整（对0不公平，概率低，不推荐使用）")])]),t._v(" "),s("tr",[s("td",[t._v("floor()")]),t._v(" "),s("td",[t._v("向下取整")])]),t._v(" "),s("tr",[s("td",[t._v("round()")]),t._v(" "),s("td",[t._v("就近取整（.5往大取整）  四舍五入")])]),t._v(" "),s("tr",[s("td",[t._v("max()")]),t._v(" "),s("td",[t._v("找最大数")])]),t._v(" "),s("tr",[s("td",[t._v("min()")]),t._v(" "),s("td",[t._v("找最小数")])]),t._v(" "),s("tr",[s("td",[t._v("pow(x,y)")]),t._v(" "),s("td",[t._v("幂运算： x的y次方")])]),t._v(" "),s("tr",[s("td",[t._v("abs()")]),t._v(" "),s("td",[t._v("返回一个数的绝对值")])])])])])])]),t._v(" "),s("li",[s("p",[t._v("生成任意范围随机数")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("生成0-10的随机数")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("生成5-10的随机数")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("生成N-M之间的随机数")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("M")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("N")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("N")]),t._v("\n")])])])])])])]),t._v(" "),s("h4",{attrs:{id:"扩展"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#扩展"}},[t._v("#")]),t._v(" 扩展")]),t._v(" "),s("h5",{attrs:{id:"_1-术语解释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-术语解释"}},[t._v("#")]),t._v(" 1. 术语解释")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("术语")]),t._v(" "),s("th",[t._v("解释")]),t._v(" "),s("th",[t._v("举例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("关键字")]),t._v(" "),s("td",[t._v("在JavaScript中有特殊意义的词汇")]),t._v(" "),s("td",[t._v("let、var、function、if、else、switch、case、break")])]),t._v(" "),s("tr",[s("td",[t._v("保留字")]),t._v(" "),s("td",[t._v("在目前的JavaScript中没意义，但未来可能会具有特殊意义的词汇")]),t._v(" "),s("td",[t._v("int、short、long、char")])]),t._v(" "),s("tr",[s("td",[t._v("标识（标识符）")]),t._v(" "),s("td",[t._v("变量名，函数名的另一种叫法")]),t._v(" "),s("td",[t._v("无")])]),t._v(" "),s("tr",[s("td",[t._v("表达式")]),t._v(" "),s("td",[t._v("能产生值的代码，一般配合运算符出现")]),t._v(" "),s("td",[t._v("10+3、age>=18")])]),t._v(" "),s("tr",[s("td",[t._v("语句")]),t._v(" "),s("td",[t._v("一句代码也称之为一条语句，一般按用途还会分类：输出语句、声明语句、分支语句")]),t._v(" "),s("td",[t._v("无")])])])]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("h5",{attrs:{id:"_2-基本数据类型和引用数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-基本数据类型和引用数据类型"}},[t._v("#")]),t._v(" 2. 基本数据类型和引用数据类型")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("简单数据类型又叫基本数据类型或者值类型，复杂类型又叫做引用类型")]),t._v(" "),s("ul",[s("li",[t._v("值类型：简单数据类型/基本数据类型，在存储时变量中存储的是值本身，因此叫做值类型\n"),s("ul",[s("li",[t._v("string、number、boolean、undefined、null")])])]),t._v(" "),s("li",[t._v("引用类型：复杂数据类型，在存储时变量中存储的仅仅是地址（引用），因此叫做引用数据类型\n"),s("ul",[s("li",[t._v("通过new关键字创建的对象（系统对象、自定义对象），如Object、Array、Date等")])])])])]),t._v(" "),s("li",[s("p",[t._v("堆栈空间分配区别：")]),t._v(" "),s("ul",[s("li",[t._v("栈（操作系统）：由操作系统自动分配释放存放函数的参数值、局部变量的值等。其操作方式类似于数据结构中的栈；\n"),s("ul",[s("li",[t._v("值类型（简单数据类型）的数据直接存放在变量（栈空间）中。")])])]),t._v(" "),s("li",[t._v("堆（操作系统）：存储复杂类型（对象），一般由程序员分配释放，若程序员不释放，由垃圾回收机制回收。\n"),s("ul",[s("li",[t._v("引用类型变量（栈空间）例存放的是地址，真正的对象实例存放在堆空间中。")])])])])])]),t._v(" "),s("h3",{attrs:{id:"数组-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组-object"}},[t._v("#")]),t._v(" 数组（Object）")]),t._v(" "),s("p",[t._v("数组（Array）是一种可以按顺序保存多个数据的集合，属于"),s("strong",[t._v("对象类型")]),t._v("的一种，数组是有长度的。")]),t._v(" "),s("h4",{attrs:{id:"声明语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#声明语法"}},[t._v("#")]),t._v(" 声明语法")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 使用构造函数声明数组\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n注意：\n\t构造函数内只有一个参数，则表示数组的长度\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//数组的长度是10")]),t._v("\n  如果输入多个参数则表示数组的初始化\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小苏'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" 数组名 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("数据"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("数据"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("数据"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("…"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("数据n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n例："),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" names "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小明'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小刚'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小红'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小丽'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小米'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("ul",[s("li",[t._v("数组是按顺序保存，所以每个数据都有自己的编号")]),t._v(" "),s("li",[t._v("计算机中的编号从0开始（索引、下标）")]),t._v(" "),s("li",[t._v("在数组中，数据的编号也叫索引或下标")]),t._v(" "),s("li",[s("strong",[t._v("数组可以存储任意类型的数据")])])]),t._v(" "),s("h4",{attrs:{id:"赋值语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#赋值语法"}},[t._v("#")]),t._v(" 赋值语法")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("数组名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("下标"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 值\n\n例如：\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\tarr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小苏'")]),t._v("\n\tarr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小旭'")]),t._v("\n\n如果想修改数组的值，找对应的索引重新赋值即可。\n\tarr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小苏同学'")]),t._v("\n")])])]),s("h4",{attrs:{id:"取值语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#取值语法"}},[t._v("#")]),t._v(" 取值语法")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("数组名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("下标"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n例如：\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//取值小苏")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小苏'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小旭'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\tconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"类型检测"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型检测"}},[t._v("#")]),t._v(" 类型检测")]),t._v(" "),s("h3",{attrs:{id:"typeof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#typeof"}},[t._v("#")]),t._v(" typeof")]),t._v(" "),s("blockquote",[s("p",[t._v("js提供了一个可以返回数据类型的关键字："),s("code",[t._v("typeof")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// typeof用法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" 数据"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("数据"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n\t区别：\n\t\ttypeof 数据\t ：是一个语句，从左到右，优先检测左边的数据，再进行后续操作。\n\t\ttypeof(数据) ：是一个函数，会先执行完小括号里面的语句，再检测数据。\n*/")]),t._v("\n")])])]),s("p",[t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数式")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// number")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 语句式")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// number")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// string")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// boolean")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// object")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n")])])]),s("h3",{attrs:{id:"instanceof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#instanceof"}},[t._v("#")]),t._v(" instanceof")]),t._v(" "),s("p",[s("code",[t._v("instanceof")]),t._v(" 运算符用于检测构造函数的 "),s("code",[t._v("prototype")]),t._v(" 属性是否出现在某个实例对象的原型链上。")]),t._v(" "),s("p",[t._v("也可以理解为是否为某个对象的实例，"),s("code",[t._v("typeof")]),t._v(" 不能区分数组，但 "),s("code",[t._v("instanceof")]),t._v(" 则可以。")]),t._v(" "),s("h3",{attrs:{id:"值类型与对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#值类型与对象"}},[t._v("#")]),t._v(" 值类型与对象")]),t._v(" "),s("p",[t._v("下面是使用字面量与对象方法创建字符串，返回的是不同类型。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xiaosutongxue"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xstx"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" name1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" name2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//string object")]),t._v("\n")])])]),s("p",[t._v("只有对象才有方法使用，但在"),s("code",[t._v("JS")]),t._v("中也可以使用值类型调用方法，因为它会在执行时将值类型转为对象。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xiaosutongxue"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xstx"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//13")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//4")]),t._v("\n")])])]),s("h2",{attrs:{id:"类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[t._v("#")]),t._v(" 类型转换")]),t._v(" "),s("p",[s("strong",[t._v("那么为什么需要类型转换呢？")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("使用表单、prompt 获取过来的数据默认是字符串类型的，不能直接简单的进行加法运算，此时需要转换变量的数据类型。")])]),t._v(" "),s("li",[s("p",[t._v("类型转换就是把一种数据类型的变量转换成我们需要的数据类型。")])])]),t._v(" "),s("h3",{attrs:{id:"显式转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显式转换"}},[t._v("#")]),t._v(" 显式转换")]),t._v(" "),s("ul",[s("li",[t._v("编写程序时过度依赖系统内部的隐式转换是不严谨的，因为隐式转换规律并不清晰，大多是靠经验总结的规律。")]),t._v(" "),s("li",[t._v("为了避免因隐式转换带来的问题，通常根逻辑需要对数据进行显示转换。")]),t._v(" "),s("li",[t._v("概念：自己写代码告诉系统该转成什么类型。")])]),t._v(" "),s("h4",{attrs:{id:"转换为数字型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#转换为数字型"}},[t._v("#")]),t._v(" 转换为数字型")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("Number()")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只有包含纯数字的字符串能被转换出具体的数字，否则结果是NaN.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN也是number类型的数据，代表非数字。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3000'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3000")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("parseInt()")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 转整数，且开头必须为正负号或者数字开头，且是连续的数字，如果遇到非数字则停止。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'+50000axcds123'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//+50000")]),t._v("\n\t\n")])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("parseFloat()")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以保留小数，经常用于过滤单位（只能识别数字开头的）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 转小数，注意科学记数法e。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开头必须为正负号或者数字开头，且是连续的数字，遇到第一个小数点，向后检测，如果后面是连续的数字则转出，如果遇到非数字或者第二个小数点则停止。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.14'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3e2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//300")]),t._v("\n")])])])])]),t._v(" "),s("br"),t._v(" "),s("h4",{attrs:{id:"转换为字符型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#转换为字符型"}},[t._v("#")]),t._v(" 转换为字符型")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("String()")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("变量.toString()")])])]),t._v(" "),s("li",[s("p",[t._v("数据 + ' '")])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("null")]),t._v(" 和 "),s("code",[t._v("undefined")]),t._v(" 都不能使用 "),s("code",[t._v(".toString()")]),t._v(" 转字符串")])]),t._v(" "),s("ul",[s("li",[t._v("数字转字符串要放在 "),s("strong",[t._v("括号")]),t._v(" 里，例如：(123).toString()")])])])]),t._v(" "),s("br"),t._v(" "),s("h4",{attrs:{id:"转换为布尔型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#转换为布尔型"}},[t._v("#")]),t._v(" 转换为布尔型")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Boolean()")])])]),t._v(" "),s("br"),t._v(" "),s("h4",{attrs:{id:"有6个值当false来看的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有6个值当false来看的"}},[t._v("#")]),t._v(" 有6个值当false来看的")]),t._v(" "),s("ul",[s("li",[t._v("false")]),t._v(" "),s("li",[t._v("数字0（除了0之外，所有都是真的）")]),t._v(" "),s("li",[t._v("' ' （空字符串是假的，其余是真的）")]),t._v(" "),s("li",[t._v("undefined")]),t._v(" "),s("li",[t._v("null")]),t._v(" "),s("li",[t._v("NaN（也可以当作假的）")])]),t._v(" "),s("h3",{attrs:{id:"隐式转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隐式转换"}},[t._v("#")]),t._v(" 隐式转换")]),t._v(" "),s("p",[t._v("某些运算符被执行时，系统内部自动将数据类型进行转换，这种转换称为隐式转换。")]),t._v(" "),s("h4",{attrs:{id:"转换规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#转换规则"}},[t._v("#")]),t._v(" 转换规则：")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("+")]),t._v(" 号两边只要有一个是字符串，都会把另外一个转成字符串")])]),t._v(" "),s("li",[s("p",[t._v("除了"),s("code",[t._v("+")]),t._v(" 以外的算术运算符 比如 "),s("code",[t._v("-")]),t._v(" "),s("code",[t._v("*")]),t._v(" "),s("code",[t._v("/")]),t._v("  等都会把数据转成数字类型")])]),t._v(" "),s("li",[s("p",[t._v("在没有字符串类型的前提下，其他类型使用 "),s("code",[t._v("+")]),t._v(" 也会存在一些隐式转换")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、数字 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" 字符串 ：将数字转换为字符串\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、数字 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" boolean ：将 boolean 转换为 number类型\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("、数字 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" ：结果为 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v("，"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v("的类型为 number\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("、字符串 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" boolean ：将boolean 转换为 字符串\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("、boolean "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" boolean ：都转换成number在做相加运算\n")])])]),s("ul",[s("li",[s("p",[s("strong",[t._v("console.log(1 + true)")]),t._v("    //2")]),t._v(" "),s("ul",[s("li",[t._v("将数字类型转换为布尔类型 只有true 或者 false")]),t._v(" "),s("li",[t._v("把布尔类型 true 或者 false 转为数字类型的话，true转为1，false转为0")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("console.log(1 + null)")]),t._v("    //null转为0")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("console.log(1 + undefined)")]),t._v("    //undefined是NaN")])]),t._v(" "),s("li",[s("p",[t._v("缺点：")]),t._v(" "),s("ul",[s("li",[t._v("转换类型不明确，靠经验才能总结")])])]),t._v(" "),s("li",[s("p",[t._v("小技巧：")]),t._v(" "),s("ul",[s("li",[t._v("+号作为正号解析可以转换成Number")])])])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);