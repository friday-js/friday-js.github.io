(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{346:function(t,s,a){"use strict";a.r(s);var n=a(13),_=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"dql-查询语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dql-查询语句"}},[t._v("#")]),t._v(" DQL:查询语句")]),t._v(" "),s("h3",{attrs:{id:"排序查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#排序查询"}},[t._v("#")]),t._v(" 排序查询")]),t._v(" "),s("p",[t._v("​    * 语法：order by 子句")]),t._v(" "),s("p",[t._v("​       * order by 排序字段1 排序方式1 ， 排序字段2 排序方式2...")]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("p",[t._v("​    * 排序方式：")]),t._v(" "),s("p",[t._v("​       * ASC：升序，默认的。")]),t._v(" "),s("p",[t._v("​       * DESC：降序。")]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("p",[t._v("​    * 注意：")]),t._v(" "),s("p",[t._v("​       * 如果有多个排序条件，则当前边的条件值一样时，才会判断第二条件。")]),t._v(" "),s("h3",{attrs:{id:"聚合函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#聚合函数"}},[t._v("#")]),t._v(" 聚合函数")]),t._v(" "),s("p",[t._v("将一列数据作为一个整体，进行纵向的计算。")]),t._v(" "),s("p",[t._v("​    \\1. count：计算个数")]),t._v(" "),s("p",[t._v("​       \\1. 一般选择非空的列：主键")]),t._v(" "),s("p",[t._v("​       \\2. count(*)")]),t._v(" "),s("p",[t._v("​    \\2. max：计算最大值")]),t._v(" "),s("p",[t._v("​    \\3. min：计算最小值")]),t._v(" "),s("p",[t._v("​    \\4. sum：计算和")]),t._v(" "),s("p",[t._v("​    \\5. avg：计算平均值")]),t._v(" "),s("p",[t._v("​    * 注意：聚合函数的计算，排除null值。")]),t._v(" "),s("p",[t._v("​       解决方案：")]),t._v(" "),s("p",[t._v("​           \\1. 选择不包含非空的列进行计算")]),t._v(" "),s("p",[t._v("​           \\2. IFNULL函数")]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("h3",{attrs:{id:"分组查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分组查询"}},[t._v("#")]),t._v(" 分组查询:")]),t._v(" "),s("p",[t._v("​    \\1. 语法：group by 分组字段；")]),t._v(" "),s("p",[t._v("​    \\2. 注意：")]),t._v(" "),s("p",[t._v("​       \\1. 分组之后查询的字段：分组字段、聚合函数")]),t._v(" "),s("p",[t._v("​       \\2. where 和 having 的区别？")]),t._v(" "),s("p",[t._v("​           \\1. where 在分组之前进行限定，如果不满足条件，则不参与分组。having在分组之后进行限定，如果不满足结果，则不会被查询出来")]),t._v(" "),s("p",[t._v("​           \\2. where 后不可以跟聚合函数，having可以进行聚合函数的判断。")]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 按照性别分组。分别查询男、女同学的平均分")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" sex "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AVG")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" sex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 按照性别分组。分别查询男、女同学的平均分,人数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" sex "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AVG")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" sex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 按照性别分组。分别查询男、女同学的平均分,人数 要求：分数低于70分的人，不参与分组")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" sex "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AVG")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" math "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("70")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" sex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 按照性别分组。分别查询男、女同学的平均分,人数 要求：分数低于70分的人，不参与分组,分组之后。人数要大于2个人")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" sex "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AVG")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" math "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("70")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" sex "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("HAVING")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("          \n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" sex "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AVG")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 人数 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" math "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("70")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" sex "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("HAVING")]),t._v(" 人数 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"分页查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分页查询"}},[t._v("#")]),t._v(" 分页查询")]),t._v(" "),s("p",[t._v("​    \\1. 语法：limit 开始的索引,每页查询的条数;")]),t._v(" "),s("p",[t._v("​    \\2. 公式：开始的索引 = （当前的页码 - 1） * 每页显示的条数")]),t._v(" "),s("p",[t._v("​       -- 每页显示3条记录")]),t._v(" "),s("p",[t._v("​       SELECT * FROM student LIMIT 0,3; -- 第1页")]),t._v(" "),s("p",[t._v("​       SELECT * FROM student LIMIT 3,3; -- 第2页")]),t._v(" "),s("p",[t._v("​       SELECT * FROM student LIMIT 6,3; -- 第3页")]),t._v(" "),s("p",[t._v('​    \\3. limit 是一个MySQL"方言"')]),t._v(" "),s("h2",{attrs:{id:"约束"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#约束"}},[t._v("#")]),t._v(" 约束")]),t._v(" "),s("p",[t._v("* 概念： 对表中的数据进行限定，保证数据的正确性、有效性和完整性。")]),t._v(" "),s("p",[t._v("* 分类：")]),t._v(" "),s("p",[t._v("​    \\1. 主键约束：primary key")]),t._v(" "),s("p",[t._v("​    \\2. 非空约束：not null")]),t._v(" "),s("p",[t._v("​    \\3. 唯一约束：unique")]),t._v(" "),s("p",[t._v("​    \\4. 外键约束：foreign key")]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("p",[t._v("* 非空约束：not null，某一列的值不能为null")]),t._v(" "),s("p",[t._v("​    \\1. 创建表时添加约束")]),t._v(" "),s("p",[t._v("​       CREATE TABLE stu(")]),t._v(" "),s("p",[t._v("​           id INT,")]),t._v(" "),s("p",[t._v("​           NAME VARCHAR(20) NOT NULL -- name为非空")]),t._v(" "),s("p",[t._v("​       );")]),t._v(" "),s("p",[t._v("​    \\2. 创建表完后，添加非空约束")]),t._v(" "),s("p",[t._v("​       ALTER TABLE stu MODIFY NAME VARCHAR(20) NOT NULL;")]),t._v(" "),s("p",[t._v("​    \\3. 删除name的非空约束")]),t._v(" "),s("p",[t._v("​       ALTER TABLE stu MODIFY NAME VARCHAR(20);")]),t._v(" "),s("p",[t._v("* 唯一约束：unique，某一列的值不能重复")]),t._v(" "),s("p",[t._v("​    \\1. 注意：")]),t._v(" "),s("p",[t._v("​       * 唯一约束可以有NULL值，但是只能有一条记录为null")]),t._v(" "),s("p",[t._v("​    \\2. 在创建表时，添加唯一约束")]),t._v(" "),s("p",[t._v("​       CREATE TABLE stu(")]),t._v(" "),s("p",[t._v("​           id INT,")]),t._v(" "),s("p",[t._v("​           phone_number VARCHAR(20) UNIQUE -- 手机号")]),t._v(" "),s("p",[t._v("​       );")]),t._v(" "),s("p",[t._v("​    \\3. 删除唯一约束")]),t._v(" "),s("p",[t._v("​       ALTER TABLE stu DROP INDEX phone_number;")]),t._v(" "),s("p",[t._v("​    \\4. 在表创建完后，添加唯一约束")]),t._v(" "),s("p",[t._v("​       ALTER TABLE stu MODIFY phone_number VARCHAR(20) UNIQUE;")]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("p",[t._v("主键约束：primary key。")]),t._v(" "),s("p",[t._v("​    \\1. 注意：")]),t._v(" "),s("p",[t._v("​       \\1. 含义：非空且唯一")]),t._v(" "),s("p",[t._v("​       \\2. 一张表只能有一个字段为主键")]),t._v(" "),s("p",[t._v("​       \\3. 主键就是表中记录的唯一标识")]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("p",[t._v("​    \\2. 在创建表时，添加主键约束")]),t._v(" "),s("p",[t._v("​       create table stu(")]),t._v(" "),s("p",[t._v("​           id int primary key,-- 给id添加主键约束")]),t._v(" "),s("p",[t._v("​           name varchar(20)")]),t._v(" "),s("p",[t._v("​       );")]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("p",[t._v("​    \\3. 删除主键")]),t._v(" "),s("p",[t._v("​       -- 错误 alter table stu modify id int ;")]),t._v(" "),s("p",[t._v("​       ALTER TABLE stu DROP PRIMARY KEY;")]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("p",[t._v("​    \\4. 创建完表后，添加主键")]),t._v(" "),s("p",[t._v("​       ALTER TABLE stu MODIFY id INT PRIMARY KEY;")]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("p",[t._v("​    \\5. 自动增长：")]),t._v(" "),s("p",[t._v("​       \\1. 概念：如果某一列是数值类型的，使用 auto_increment 可以来完成值得自动增长")]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("p",[t._v("​       \\2. 在创建表时，添加主键约束，并且完成主键自增长")]),t._v(" "),s("p",[t._v("​       create table stu(")]),t._v(" "),s("p",[t._v("​           id int primary key auto_increment,-- 给id添加主键约束")]),t._v(" "),s("p",[t._v("​           name varchar(20)")]),t._v(" "),s("p",[t._v("​       );")]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("p",[t._v("​       \\3. 删除自动增长")]),t._v(" "),s("p",[t._v("​       ALTER TABLE stu MODIFY id INT;")]),t._v(" "),s("p",[t._v("​       \\4. 添加自动增长")]),t._v(" "),s("p",[t._v("​       ALTER TABLE stu MODIFY id INT AUTO_INCREMENT;")]),t._v(" "),s("p",[t._v("外键约束：foreign key,让表于表产生关系，从而保证数据的正确性。")]),t._v(" "),s("p",[t._v("​    \\1. 在创建表时，可以添加外键")]),t._v(" "),s("p",[t._v("​       * 语法：")]),t._v(" "),s("p",[t._v("​       create table 表名(")]),t._v(" "),s("p",[t._v("​           ....")]),t._v(" "),s("p",[t._v("​           外键列")]),t._v(" "),s("p",[t._v("​           constraint 外键名称 foreign key (外键列名称) references 主表名称(主表列名称)")]),t._v(" "),s("p",[t._v("​       );")]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("p",[t._v("​    \\2. 删除外键")]),t._v(" "),s("p",[t._v("​       ALTER TABLE 表名 DROP FOREIGN KEY 外键名称;")]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("p",[t._v("​    \\3. 创建表之后，添加外键")]),t._v(" "),s("p",[t._v("​       ALTER TABLE 表名 ADD CONSTRAINT 外键名称 FOREIGN KEY (外键字段名称) REFERENCES 主表名称(主表列名称);")]),t._v(" "),s("p",[t._v("​    \\4. 级联操作")]),t._v(" "),s("p",[t._v("​       \\1. 添加级联操作")]),t._v(" "),s("p",[t._v("​           语法：ALTER TABLE 表名 ADD CONSTRAINT 外键名称")]),t._v(" "),s("p",[t._v("​                  FOREIGN KEY (外键字段名称) REFERENCES 主表名称(主表列名称) ON UPDATE CASCADE ON DELETE CASCADE ;")]),t._v(" "),s("p",[t._v("​       \\2. 分类：")]),t._v(" "),s("p",[t._v("​           \\1. 级联更新：ON UPDATE CASCADE")]),t._v(" "),s("p",[t._v("​           \\2. 级联删除：ON DELETE CASCADE")]),t._v(" "),s("h2",{attrs:{id:"多表之间的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多表之间的关系"}},[t._v("#")]),t._v(" 多表之间的关系")]),t._v(" "),s("h3",{attrs:{id:"分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分类"}},[t._v("#")]),t._v(" 分类")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("一对一")]),t._v(" "),s("ul",[s("li",[t._v("如：人和身份证")]),t._v(" "),s("li",[t._v("分析：一个人只有一个身份证，一个身份证只能对应一个人")])])]),t._v(" "),s("li",[s("p",[t._v("一对多（多对一）")]),t._v(" "),s("ul",[s("li",[t._v("如：部门和员工")]),t._v(" "),s("li",[t._v("分析：一个部门有多个员工，一个员工只能对应一个部门")])])]),t._v(" "),s("li",[s("p",[t._v("多对多：")]),t._v(" "),s("ul",[s("li",[t._v("如：学生和课程")]),t._v(" "),s("li",[t._v("分析：一个学生可以选择很多门课程，一个课程也可以被很多学生选择")])])])]),t._v(" "),s("h3",{attrs:{id:"实现关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现关系"}},[t._v("#")]),t._v(" 实现关系：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("一对一")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("如：人和身份证")])]),t._v(" "),s("li",[s("p",[t._v("实现方式：一对一关系实现，可以在任意一方添加唯一外键指向另一方的主键。")])])])]),t._v(" "),s("li",[s("p",[t._v("一对多（多对一）")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("如：部门和员工")])]),t._v(" "),s("li",[s("p",[t._v("实现方式：在多的一方建立外键，指向一的一方的主键。")])])])]),t._v(" "),s("li",[s("p",[t._v("多对多")]),t._v(" "),s("ul",[s("li",[t._v("如：学生和课程")]),t._v(" "),s("li",[t._v("实现方式：多对多关系实现需要借助第三张中间表。中间表至少包含两个字段，这两个字段作为第三张表的外键，分别指向两张表的主键")])])])]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("h3",{attrs:{id:"案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#案例"}},[t._v("#")]),t._v(" 案例")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 创建旅游线路分类表 tab_category")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- cid 旅游线路分类主键，自动增长")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- cname 旅游线路分类名称非空，唯一，字符串 100")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" tab_category "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tcid "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tcname "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNIQUE")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 创建旅游线路表 tab_route")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n\trid 旅游线路主键，自动增长\n\trname 旅游线路名称非空，唯一，字符串 100\n\tprice 价格\n\trdate 上架时间，日期类型\n\tcid 外键，所属分类\n*/")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" tab_route"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\trid "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\trname "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNIQUE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tprice "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DOUBLE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\trdate "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DATE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tcid "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOREIGN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REFERENCES")]),t._v(" tab_category"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*创建用户表 tab_user\n\tuid 用户主键，自增长\n\tusername 用户名长度 100，唯一，非空\n\tpassword 密码长度 30，非空\n\tname 真实姓名长度 100\n\tbirthday 生日\n\tsex 性别，定长字符串 1\n\ttelephone 手机号，字符串 11\n\temail 邮箱，字符串长度 100\n*/")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" tab_user "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tuid "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tusername "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNIQUE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tPASSWORD "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tNAME "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tbirthday "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DATE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tsex "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\ttelephone "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\temail "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*创建收藏表 tab_favorite\n\trid 旅游线路 id，外键\n\tdate 收藏时间\n\tuid 用户 id，外键\n\trid 和 uid 不能重复，设置复合主键，同一个用户不能收藏同一个线路两次\n*/")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" tab_favorite "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\trid "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 线路id")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DATETIME")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tuid "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 用户id")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 创建复合主键")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("uid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 联合主键")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOREIGN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REFERENCES")]),t._v(" tab_route"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOREIGN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REFERENCES")]),t._v(" tab_user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"范式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#范式"}},[t._v("#")]),t._v(" 范式")]),t._v(" "),s("h3",{attrs:{id:"概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念：")]),t._v(" "),s("p",[t._v("设计数据库时，需要遵循的一些规范。要遵循后边的范式要求，必须先遵循前边的所有范式要求")]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("p",[t._v("​       设计关系数据库时，遵从不同的规范要求，设计出合理的关系型数据库，这些不同的规范要求被称为不同的范式，各种范式呈递次规范，越高的范式数据库冗余越小。")]),t._v(" "),s("p",[t._v("​       目前关系数据库有六种范式：第一范式（1NF）、第二范式（2NF）、第三范式（3NF）、巴斯-科德范式（BCNF）、第四范式(4NF）和第五范式（5NF，又称完美范式）。")]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("h3",{attrs:{id:"分类-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分类-2"}},[t._v("#")]),t._v(" 分类：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("第一范式（1NF）：每一列都是不可分割的原子数据项")])]),t._v(" "),s("li",[s("p",[t._v("第二范式（2NF）：在1NF的基础上，非码属性必须完全依赖于码（在1NF基础上消除非主属性对主码的部分函数依赖）")])])]),t._v(" "),s("p",[t._v("​           * 几个概念：")]),t._v(" "),s("p",[t._v("​              \\1. 函数依赖：A--\x3eB,如果通过A属性(属性组)的值，可以确定唯一B属性的值。则称B依赖于A")]),t._v(" "),s("p",[t._v("​                  例如：学号--\x3e姓名。 （学号，课程名称） --\x3e 分数")]),t._v(" "),s("p",[t._v("​              \\2. 完全函数依赖：A--\x3eB， 如果A是一个属性组，则B属性值得确定需要依赖于A属性组中所有的属性值。")]),t._v(" "),s("p",[t._v("​                  例如：（学号，课程名称） --\x3e 分数")]),t._v(" "),s("p",[t._v("​              \\3. 部分函数依赖：A--\x3eB， 如果A是一个属性组，则B属性值得确定只需要依赖于A属性组中某一些值即可。")]),t._v(" "),s("p",[t._v("​                  例如：（学号，课程名称） -- > 姓名")]),t._v(" "),s("p",[t._v("​              \\4. 传递函数依赖：A--\x3eB, B -- >C . 如果通过A属性(属性组)的值，可以确定唯一B属性的值，在通过B属性（属性组）的值可以确定唯一C属性的值，则称 C 传递函数依赖于A")]),t._v(" "),s("p",[t._v("​                  例如：学号--\x3e系名，系名--\x3e系主任")]),t._v(" "),s("p",[t._v("​              \\5. 码：如果在一张表中，一个属性或属性组，被其他所有属性所完全依赖，则称这个属性(属性组)为该表的码")]),t._v(" "),s("p",[t._v("​                  例如：该表中码为：（学号，课程名称）")]),t._v(" "),s("p",[t._v("​                  * 主属性：码属性组中的所有属性")]),t._v(" "),s("p",[t._v("​                  * 非主属性：除过码属性组的属性")]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("第三范式（3NF）：在2NF基础上，任何非主属性不依赖于其它非主属性（在2NF基础上消除传递依赖）")])]),t._v(" "),s("h2",{attrs:{id:"数据库的备份和还原"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库的备份和还原"}},[t._v("#")]),t._v(" 数据库的备份和还原")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("命令行")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("语法：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("备份： mysqldump -u用户名 -p密码 数据库名称 > 保存的路径")])]),t._v(" "),s("li",[s("p",[t._v("还原：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("登录数据库")])]),t._v(" "),s("li",[s("p",[t._v("创建数据库")])]),t._v(" "),s("li",[s("p",[t._v("使用数据库")])]),t._v(" "),s("li",[s("p",[t._v("执行文件。source 文件路径")])])])])])])])]),t._v(" "),s("li",[s("p",[t._v("图形化工具")])])])])}),[],!1,null,null,null);s.default=_.exports}}]);